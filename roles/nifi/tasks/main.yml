- name: Create nifi group
  group:
    name: "{{ nifi_group }}"
    state: present

- name: Create nifi user
  user:
    name: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Create directory for nifi
  file:
    path: "{{ nifi_dir }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Create nifi internals directories
  file:
    path: "{{ nifi_dir }}/data/{{ item }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  loop:
    - content_repository
    - database_repository
    - flowfile_repository
    - logs
    - provenance_repository
    - state

- name: Add nifi docker compose
  template:
    src: docker-compose.yml.j2
    dest: "{{ nifi_dir }}/docker-compose.yml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Check if bootstrap needed
  stat:
    path: "{{ nifi_dir }}/bootstrapped"
  register: p

- name: Bootstrap nifi
  include_tasks: bootstrap.yml
  when: not p.stat.exists

- name: Create nifi network
  shell: "docker network create {{ nifi_network }} || true"
  ignore_errors: true

- name: Start nifi
  shell: "docker compose -f {{ nifi_dir }}/docker-compose.yml up -d --force-recreate --remove-orphans"
  become: true
  become_user: "{{ nifi_user }}"

- name: Add backup.sh
  template:
    src: backup.sh.j2
    dest: "{{ nifi_dir }}/backup.sh"

- name: Add restore.sh
  template:
    src: restore.sh.j2
    dest: "{{ nifi_dir }}/restore.sh"

- name: Add get_shell
  template:
    src: get_shell.sh.j2
    dest: "{{ nifi_dir }}/get_shell.sh"
