- name: Create nifi registry group
  group:
    name: "{{ nifi_registry_group }}"
    state: present

- name: Create nifi registry user
  user:
    name: "{{ nifi_registry_user }}"
    group: "{{ nifi_registry_group }}"

- name: Create directory for nifi registry
  file:
    path: "{{ nifi_registry_dir }}"
    state: directory
    owner: "{{ nifi_registry_user }}"
    group: "{{ nifi_registry_group }}"

- name: Create data directory for nifi registry
  file:
    path: "{{ nifi_registry_dir }}/data"
    state: directory
    owner: "{{ nifi_registry_user }}"
    group: "{{ nifi_registry_group }}"

- name: Create nifi registry internals directories
  file:
    path: "{{ nifi_registry_dir }}/data/{{ item }}"
    state: directory
    owner: "{{ nifi_registry_user }}"
    group: "{{ nifi_registry_group }}"
  loop:
    - content_repository
    - database
    - database_repository
    - docs
    - flowfile_repository
    - logs
    - provenance_repository
    - state

- name: Add nifi registry docker compose
  template:
    src: docker-compose.yml.j2
    dest: "{{ nifi_registry_dir }}/docker-compose.yml"
    owner: "{{ nifi_registry_user }}"
    group: "{{ nifi_registry_group }}"

- name: Check if bootstrap needed
  stat:
    path: "{{ nifi_registry_dir }}/bootstrapped"
  register: p

- name: Bootstrap nifi registry
  include_tasks: bootstrap.yml
  when: not p.stat.exists

- name: Create nifi registry network
  shell: "docker network create {{ nifi_network }} || true"
  ignore_errors: true # TODO: Make it so this is not needed by checking first, registering a variable, and using a conditional

- name: Start nifi registry
  shell: "docker compose -f {{ nifi_registry_dir }}/docker-compose.yml up -d --force-recreate"
  become: true
  become_user: "{{ nifi_registry_user }}"
