x-logging:
  &default-logging
  options:
    max-size: "10m"
    max-file: "3"

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  image: app-airflow
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@{{ airflow_postgres_service_name }}/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@{{ airflow_postgres_service_name }}/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@{{ airflow_redis_service_name }}:6379/0
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${UID}:${GID}"
  depends_on:
    {{ airflow_redis_service_name }}:
      condition: service_healthy
    {{ airflow_postgres_service_name }}:
      condition: service_healthy

services:

  {{ airflow_postgres_service_name }}:
    image: postgres:13
    logging: *default-logging
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    networks:
      - {{ docker_app_network }}
    restart: always

  {{ airflow_redis_service_name }}:
    image: redis:latest
    logging: *default-logging
    ports:
      - ${AIRFLOW_REDIS_PORT:-6379}:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always
    networks:
      - {{ docker_app_network }}

  {{ airflow_webserver_service_name }}:
    <<: *airflow-common
    command: webserver
    logging: *default-logging
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - {{ docker_app_network }}

  {{ airflow_scheduler_service_name }}:
    <<: *airflow-common
    command: scheduler
    logging: *default-logging
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"',
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - {{ docker_app_network }}

  {{ airflow_worker_service_name }}:
    <<: *airflow-common
    command: celery worker
    logging: *default-logging
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - {{ docker_app_network }}

  airflow-init:
    <<: *airflow-common
    command: version
    logging: *default-logging
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    networks:
      - {{ docker_app_network }}

  flower:
    <<: *airflow-common
    command: celery flower
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - {{ docker_app_network }}

networks:
  {{ docker_app_network }}:
    name: {{ docker_app_network }}

volumes:
  airflow-db-volume: